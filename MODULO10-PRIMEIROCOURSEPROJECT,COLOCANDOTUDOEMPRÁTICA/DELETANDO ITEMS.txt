












-> AGORA SÓ FALTA ADICIONAR O DELETE DE ITEMS...













--> ADICIONEI O TELEPORT NO 'dialog':






















<template>

    <Teleport to="body">
    <div class="backdrop" @click="$emit('closeDialog')"></div>
    <dialog open>
        <header>
            <slot name="headerSlot">
                <h2> <!-- ESTE CONTEÚDO DEFAULT SERÁ UTILIZADO SE NADA FOR PASSADO COMO CONTEÚDO do 'slot' DESSE DIALOG  - PODEMOS OU PASSAR ESSE PROP 'title' para definir o texto que desejarmos, ou ENTÃO REPASSAR UMA ESTRUTURA HTML TOTALMENTE DIFERNETE, QUE VAI FAZER OVERWRITE desse '{{title}}' ... -->
                    {{ title }}
                </h2>
            </slot>
        </header>
        <section>
            <slot></slot> <!-- ESSE É O SLOT DEFAULT-->
        </section>

        <menu>
            <slot name="menuSlot">
                <base-button @click="$emit('closeDialog')">Close</base-button>
            </slot>
        </menu>

    </dialog>
</Teleport>

</template>



<script>

export default {

    emits: ['closeDialog'],

    data() {
        return {
            props: ['title']
        }
    }
}
</script>





<style scoped>
backdrop {
    position: fixed;
    top: 0;
    left: 0;
    height: 100vh;
    width: 100%;
    background-color: rgba(0, 0, 0, 0.75);
    z-index: 10;
}

dialog {
    position: fixed;
    top: 20vh;
    left: 10%;
    width: 80%;
    z-index: 100;
    border-radius: 12px;
    border: none;
    box-shadow: 0 2px 8px rgba(0, 0, 0, 0.26);
    padding: 0;
    margin: 0;
    overflow: hidden;
}

header {
    background-color: #3a0061;
    color: white;
    width: 100%;
    padding: 1rem;
}

header h2 {
    margin: 0;
}

section {
    padding: 1rem;
}

menu {
    padding: 1rem;
    display: flex;
    justify-content: flex-end;
    margin: 0;
}

@media (min-width: 768px) {
    dialog {
        left: calc(50% - 20rem);
        width: 40rem;
    }
}
</style>










FICOU TIPO ASSIM:







    <Teleport to="body">
    <div class="backdrop" @click="$emit('closeDialog')"></div>
    <dialog open>
        <header>
            <slot name="headerSlot">
                <h2> <!-- ESTE CONTEÚDO DEFAULT SERÁ UTILIZADO SE NADA FOR PASSADO COMO CONTEÚDO do 'slot' DESSE DIALOG  - PODEMOS OU PASSAR ESSE PROP 'title' para definir o texto que desejarmos, ou ENTÃO REPASSAR UMA ESTRUTURA HTML TOTALMENTE DIFERNETE, QUE VAI FAZER OVERWRITE desse '{{title}}' ... -->
                    {{ title }}
                </h2>
            </slot>
        </header>
        <section>
            <slot></slot> <!-- ESSE É O SLOT DEFAULT-->
        </section>

        <menu>
            <slot name="menuSlot">
                <base-button @click="$emit('closeDialog')">Close</base-button>
            </slot>
        </menu>

    </dialog>
</Teleport>












------------------------









AGORA SÓ FALTA O DELETE...










--> MAS É MELHOR 



DELETARMOS NOSSO ITEM DE UM MODO DIFERENTE...












--> É MELHOR REMOVER LÁ DO ARRAY ORIGINAL (E não )








--> tipo assim:









removeResource(id) {
    const resIndex = this.storedResources.findIndex(res => res.id)
    this.storedResources.splice(resIndex, 1)
}











----> ISSO VAI MANIPULAR O 


ARRAY ORIGINAL --> 








É MELHOR FAZER ASSIM PQ 

__ ESSE ARRAY, MODIFICADO,

VAI SER PROVIDENCIADO A OS OUTROS 

COMPONENTS EM QUE 



INJETAMOS ESSA 

DATA PROPERTY (

    mas se fazemos do modo 'filter',

    nós acabamos RETORNANDO UM NOVO ARRAY,

    QUE TERÁ UM NOVO LUGAR NA MEMÓRIA,

    O QUE 

    NÃO VAI FAZER 

    ELE SER 'PROVIDED'

    AOS OUTROS COMPONENTS...
)