








TEMOS UM ASSIGNMENT....










---> PRATICAR O QUE APRENDEMOS SOBRE LISTS E CONDITIONAL CONTENT...















--> TERMINEI...


FICOU TIPO ASSIm:

















<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link href="https://fonts.googleapis.com/css2?family=Jost:wght@400;700&amp;display=swap" rel="stylesheet">
    <link rel="stylesheet" href="styles.css">
    <script src="https://unpkg.com/vue@next"></script>
    <script src="app.js" defer></script>
    <title>Document</title>
</head>

<body>
    <header>
        <h1>Vue Lists and Conditional Content</h1>
    </header>
    <section id="assignment">
        <h2>Assignment</h2>
        <!-- 1) Add code to manage a list of tasks in a Vue app -->
        <!-- When clicking "Add Task" a new task with the entered text should be added -->
        <input type="text" v-model="userInput">
        <button @click="addTask">Add Task</button>
        <p v-if="tasks.length === 0">No Tasks Added</p>
        <ul v-show="listIsVisible">
            <!-- 2) Output the list of tasks here -->


            <li v-for="task in tasks" :key="task">{{ task }}</li>
        </ul>
        <!-- 3) When the below button is pressed, the list should be shown or hidden -->
        <!-- BONUS: Also update the button caption -->
        <button @click="toggleListShow">{{ buttonMessage  }} List</button>

    </section>

</body>

</html>














CÓDIGO VUE:















const app = Vue.createApp({
  data() {
    return {
      userInput: '',
      listIsVisible: true,
      tasks: [],
    };
  },
  watch: {},
  computed: {
    buttonMessage() {
      return this.listIsVisible ? 'Hide' : 'Show';
    },
  },
  methods: {
    addTask() {
      this.tasks.push(this.userInput);
    },

    toggleListShow() {
      this.listIsVisible = !this.listIsVisible;
    },
  },
});
app.mount('#assignment');














--> SOLUÇÃO DO PROBLEMA:

















PROFESSOR ESCREVEU ASSIM:











PROFESSOR CRIOU O VUE APP, 

coisa básica....



















const app = Vue.createApp(
    {
        data() {
            return {
                enteredValue: '',
                tasks: []
            }
        },

        methods: {
            addTask() {
                this.tasks.push(this.enteredValue);
            }
        }
    }
)














--> OK, 


AÍ 


LÁ 


NO 

HTML FICOU BEM SIMPLES, AQUILO LÁ...














<input type="text" v-model="enteredValue">
<button @click="addTask">Add Task</button>





<ul>
    <li v-for="task in tasks">{{ task }}</li>

</ul>














OK... ISSO VAI OUTPUTTAR TUDo...






COLOCAMOS UMA KEY...







EX:








<input type="text" v-model="enteredValue">
<button @click="addTask">Add Task</button>





<ul>
    <li v-for="task in tasks" :key="task">{{ task }}</li>

</ul>











NÃO É UMA KEY BOA,

MAS É UM BOM EXEMPLO...















--> OK... 




AGORA 


TEMOS A PARTE 3, 


DO 'SHOW' E  'HIDE'...












listIsVisible...
















--> ESCREVI ASSIm:







const app = Vue.createApp({
  data() {
    return {
      userInput: '',
      listIsVisible: true,
      tasks: [],
    };











--> DEPOIS COLOQUEI O METHOD DE 





    toggleListShow() {
      this.listIsVisible = !this.listIsVisible;
    },















---> OK... FOI EXATAMENTE O QUE O PROFESSOR ESCREVEU..








DEPOIS,



ELE 


EDITOU O BUTTON COMO EU FIZ,

COM UMA PROPRIEDADE COMPUTED...



EX:










    buttonMessage() {
      return this.listIsVisible ? 'Hide' : 'Show';
    },













----->  O PROFESSOR NÃO USOU O 'V-SHOW',

usou o 'v-if',


MAS DISSE QUE O OUTRO É VÁLIDo...





















--> USEI A VERSÃO COMPUTED DO CÓDIGO, PQ É MELHOR... 






PRONTO...









acabamos com o assignment...