


O PROFESSOR NOS PASSA 1 PROBLEMA, 


1 APP COM 1 PROBLEMA,

E DEVEMOS RESOLVER AS QUESTÕES...








TEMOS O SEGUINTE PROBLEMA:











<template>
  <h2>My Course Goal</h2>
  <!-- Task 1: Output your main course goal with help of the composition API -->
  <!-- Don't hardcode it into the template, instead hardcode it into the JS code -->
  <h3>OUTPUT COURSE GOAL</h3>
  <!-- Task 2: Toggle (show/ hide) the goal with help of the button  -->
  <button>Toggle Goal</button>
  <!-- Task 3: Manage data in three ways -->
  <!-- => Separate refs -->
  <!-- => Ref Object -->
  <!-- => Reactive Object -->
  <!-- Task 4: Also solve the assignment with the Options API -->
</template>

<script>
export default {
  
}
</script>

<style>
html {
  font-family: sans-serif;
}
body {
  margin: 3rem;
  text-align: center;
}
</style>





CERTO, DEVEMOS RESOLVER...











MEU CÓDIGO FICOU ASSIM:











<template>
  <div>
    <h2>My Course Goal</h2>
    <!-- Task 1: Output your main course goal with help of the composition API -->
    <!-- Don't hardcode it into the template, instead hardcode it into the JS code -->
    <h3>OUTPUT COURSE GOAL</h3>
    <div>
      <h4 v-if="showGoal">{{ goalText }}</h4>
      <!-- Task 2: Toggle (show/ hide) the goal with help of the button  -->
      <button @click="toggleGoal">Toggle Goal</button>
    </div>
    <div>
      <h4 v-if="goalObject.showGoal2">{{ goalObject.goalText2 }}</h4>
      <button @click="toggleGoal2">Toggle Goal</button>
    </div>
    <!-- Task 3: Manage data in three ways -->
    <!-- => Separate refs -->
    <!-- => Ref Object -->
    <!-- => Reactive Object -->
    <!-- Task 4: Also solve the assignment with the Options API -->
  </div>
</template>

<script>
import { reactive, ref } from 'vue';
export default {
  setup() {
    const toggleGoal = () => {
      showGoal.value = !showGoal.value;
      if (!showGoal.value) {
        goalText.value = '';
      } else {
        goalText.value = 'I have a goal.';
      }
    };

    const toggleGoal2 = () => {
      goalObject.value.showGoal2 = !goalObject.value.showGoal2;
      if (!goalObject.value.showGoal2) {
        goalObject.value.goalText2 = '';
      } else {
        goalObject.value.goalText2 = 'I have a goal.';
      }
    };

    const toggleGoal3 = () => {
      goalObject2.showGoal3 = !goalObject2.showGoal3;
      if (!goalObject2.showGoal3) {
        goalObject2.goalText3 = '';
      } else {
        goalObject2.goalText3 = 'I have a goal.';
      }
    };

    const showGoal = ref(false);
    const goalText = ref('I have a goal.');

    const goalObject = ref({
      goalText2: 'I have a goal 2.',
      showGoal2: false,
      toggleGoal2: toggleGoal2,
    });

    const goalObject2 = reactive({
      goalText3: 'I have a goal 2.',
      showGoal3: false,
      toggleGoal3: toggleGoal2,
    })

    return {
      //normal composition api usage  (  ref(primitive-value))
      showGoal,
      toggleGoal,
      goalText,
      //composition api usage with ref(object)
      goalObject,
      toggleGoal2,
      //composition api usage with reactive(object) 
      goalObject2,
      toggleGoal3,
    };
  },
};
</script>

<style>
html {
  font-family: sans-serif;
}
body {
  margin: 3rem;
  text-align: center;
}
</style>





















NA VERDADE, FICOU ASSIM:















<template>
  <div>
    <h2>My Course Goal</h2>
    <!-- Task 1: Output your main course goal with help of the composition API -->
    <!-- Don't hardcode it into the template, instead hardcode it into the JS code -->
    <h3>OUTPUT COURSE GOAL</h3>
    <div>
      <h4 v-if="showGoal">{{ goalText }}</h4>
      <!-- Task 2: Toggle (show/ hide) the goal with help of the button  -->
      <button @click="toggleGoal">Toggle Goal</button>
    </div>
    <div>
      <h4 v-if="goalObject.showGoal2">{{ goalObject.goalText2 }}</h4>
      <button @click="toggleGoal2">Toggle Goal</button>
    </div>
    <div>
      <h4 v-if="goalObject2.showGoal3">{{ goalObject2.goalText3 }}</h4>
      <button @click="toggleGoal3">Toggle Goal</button>
    </div>
    <!-- Task 3: Manage data in three ways -->
    <!-- => Separate refs -->
    <!-- => Ref Object -->
    <!-- => Reactive Object -->
    <!-- Task 4: Also solve the assignment with the Options API -->
  </div>
</template>

<script>
import { reactive, ref } from 'vue';
export default {
  setup() {
    const toggleGoal = () => {
      showGoal.value = !showGoal.value;
      if (!showGoal.value) {
        goalText.value = '';
      } else {
        goalText.value = 'I have a goal.';
      }
    };

    const toggleGoal2 = () => {
      goalObject.value.showGoal2 = !goalObject.value.showGoal2;
      if (!goalObject.value.showGoal2) {
        goalObject.value.goalText2 = '';
      } else {
        goalObject.value.goalText2 = 'I have a goal 2.';
      }
    };

    const toggleGoal3 = () => {
      goalObject2.showGoal3 = !goalObject2.showGoal3;
      if (!goalObject2.showGoal3) {
        goalObject2.goalText3 = '';
      } else {
        goalObject2.goalText3 = 'I have a goal 3.';
      }
    };

    const showGoal = ref(false);
    const goalText = ref('I have a goal.');

    const goalObject = ref({
      goalText2: 'I have a goal 2.',
      showGoal2: false,
      toggleGoal2: toggleGoal2,
    });

    const goalObject2 = reactive({
      goalText3: 'I have a goal 3.',
      showGoal3: false,
      toggleGoal3: toggleGoal2,
    });

    return {
      //normal composition api usage  (  ref(primitive-value))
      showGoal,
      toggleGoal,
      goalText,
      //composition api usage with ref(object)
      goalObject,
      toggleGoal2,
      //composition api usage with reactive(object)
      goalObject2,
      toggleGoal3,
    };
  },
};
</script>

<style>
html {
  font-family: sans-serif;
}
body {
  margin: 3rem;
  text-align: center;
}
</style>










CERTO...











E ISSO FUNCIONOU...








MAS SE USÁSSEMOS A 'COMPOSITION API',

COMO FICARIA ESSE APP?








FICARIA ASSIM:








<template>
  <div>
    <h2>My Course Goal</h2>
    <h3>OUTPUT COURSE GOAL</h3>
    <div>
      <h4 v-if="showGoal">{{ goalText1 }}</h4>
      <button @click="toggleGoal">Toggle Goal</button>
    </div>
    <div>
      <h4 v-if="showGoal2">{{ goalText2 }}</h4>
      <button @click="toggleGoal2">Toggle Goal</button>
    </div>
    <div>
      <h4 v-if="showGoal3">{{ goalText3 }}</h4>
      <button @click="toggleGoal3">Toggle Goal</button>
    </div>
  </div>
</template>

  
  <script>
export default {
  data() {
    return {
      showGoal: false,
      showGoal2: false,
      showGoal3: false,
      goalText1: 'I have a goal.',
      goalText2: 'I have a goal 2.',
      goalText3: 'I have a goal 3.',
    };
  },

  methods: {
    toggleGoal() {
      this.showGoal = !this.showGoal;
    },

    toggleGoal2() {
      this.showGoal2 = !this.showGoal2;
    },

    toggleGoal3() {
      this.showGoal3 = !this.showGoal3;
    },
  },

  //   setup() {
  //     const toggleGoal = () => {
  //       showGoal.value = !showGoal.value;
  //       if (!showGoal.value) {
  //         goalText.value = '';
  //       } else {
  //         goalText.value = 'I have a goal.';
  //       }
  //     };

  //     const toggleGoal2 = () => {
  //       goalObject.value.showGoal2 = !goalObject.value.showGoal2;
  //       if (!goalObject.value.showGoal2) {
  //         goalObject.value.goalText2 = '';
  //       } else {
  //         goalObject.value.goalText2 = 'I have a goal 2.';
  //       }
  //     };

  //     const toggleGoal3 = () => {
  //       goalObject2.showGoal3 = !goalObject2.showGoal3;
  //       if (!goalObject2.showGoal3) {
  //         goalObject2.goalText3 = '';
  //       } else {
  //         goalObject2.goalText3 = 'I have a goal 3.';
  //       }
  //     };

  //     const showGoal = ref(false);
  //     const goalText = ref('I have a goal.');

  //     const goalObject = ref({
  //       goalText2: 'I have a goal 2.',
  //       showGoal2: false,
  //       toggleGoal2: toggleGoal2,
  //     });

  //     const goalObject2 = reactive({
  //       goalText3: 'I have a goal 3.',
  //       showGoal3: false,
  //       toggleGoal3: toggleGoal2,
  //     });

  //     return {
  //       //normal composition api usage  (  ref(primitive-value))
  //       showGoal,
  //       toggleGoal,
  //       goalText,
  //       //composition api usage with ref(object)
  //       goalObject,
  //       toggleGoal2,
  //       //composition api usage with reactive(object)
  //       goalObject2,
  //       toggleGoal3,
  //     };
  //   },
};
</script>
  
  <style>
html {
  font-family: sans-serif;
}
body {
  margin: 3rem;
  text-align: center;
}
</style>

















OK.... ACABEI ESSE ASSIGNMENT..