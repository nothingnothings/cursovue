






OK... LÁ EM 'App.vue',

TEMOS AQUELE 

PARAGRAPH 

WRAPPADO POR 'transition':



<template>
  <div class="container">
    <div
      class="block"
      :class="{
        'active-block': this.animatedBlock,
      }"
    ></div>
    <button @click="animateBlock()">Animate</button>
  </div>
  <base-modal @close="hideDialog" v-if="dialogIsVisible">
    <p>This is a test dialog!</p>
    <button @click="hideDialog">Close it!</button>
  </base-modal>
  <div class="container">
    <Transition>
      <p v-if="paragraphIsVisible">This is sometimes visible...</p>
    </Transition>
    <button @click="toggleParagraph()">Toggle Paragraph</button>
  </div>
  <div class="container">
    <button @click="showDialog">Show Dialog</button>
  </div>
</template>  

<script>











OK...







AGORA, A RESPEITO DAS CLASSES ESPECIAIS INTRODUZIDAS PELO VUE,
COM O 'TRANSITION',

TEMOS:












.v-enter-from {

}



.v-enter-active {

}



.v-enter-to {

}















-------> O VUE, POR DEFAULT,

VAI ADICIONAR ESSAS 3 CLASSES CSS, EM DIFERENTES MOMENTOS,


QUANDO 




1 COMPONENT É RENDERIZADO NO DOM PELA PRIMEIRA VEZ...















-----> OK... --> DEVEMOS DEFINIR DIFERENTES PROPRIEDADES 



NESSAS CLASSES....









--> DEVEMOS ESCREVER PELO MENOS 1 'TRANSITION' OU 'ANIMATION',


PQ REALMENTE QUEREMOS QUE O VUE CONSIGA LER O 'DURATION TIME'

DESSAS CLASSES (

    é outra coisa KEY que o 


    vue faz, por trás das cenas...
)
















--> PARA ISSO,


O PROFESSOR, EM 'v-enter-from',



DEFINE NOSSO 'STARTING STATE'..- ->  PARA ISSO,




PROFESSOR DEFINE QUE O STATE 

INICIAL SERÁ 




DE 


'INVISIBLE' ( com '0')...









--> OK.... -> DEPOIS DISSO,


ELE ESCREVE 'transform: translateY(30px)'...




(para que o negócio comece ' 1 pouco acima da position de verdade')....






ex:






 


.v-enter-from {

opacity: 0;
transform: translateY(30px);
}



.v-enter-active {

}



.v-enter-to {

}











--> DEPOIS DISSO, O PROFESSOR COLOCA, 


Em 'v-enter-to',




A OPACITY E POSITION (com transform) 
QUE 



ESSE ELEMENTO DEVERÁ TER, AO FINAL DA ANIMATION...









ex:






.v-enter-from {

opacity: 0;
transform: translateY(30px);
}



.v-enter-active {

}



.v-enter-to {
opacity: 1;
transform: translateY(0);
}






















POR FIM, 

O PROFESSOR, EM 'v-enter-active',


COLOCA A PROPRIEDADE DE 

'transition: all',


PARA QUE O VUE 


CONSIGA _ ANIMAR  TODAS AS PROPERTIES QUE DESEJAMOS ANIMAR (transition e opacity)...












----> DEPOIS DISSO, ELE COLOCA O TIMING DA ANIMATION (0.3s),

E, POR FIM,
A 'EASING-FUNCTION'....















--> DEPOIS, COLOCAMOS 'forwards', para que isso acabe assim...








EX:






.v-enter-from {
  opacity: 0;
  transform: translateY(30px);
}

.v-enter-active {
  transition: all 0.3s ease-out forwards;
}

.v-enter-to {
  opacity: 1;
  transform: translateY(0);
}










OK... MAS MEU CÓDIGO NÃO ESTÁ FICANDO ANIMADO, POR ALGUMA RAZÃO...









ok... o código do professor estava errado...


este exemplo funciona, perfeitamente:











.v-enter-active,
.v-leave-active {
  transition: opacity 0.5s ease;
}

.v-enter-from,
.v-leave-to {
  opacity: 0;
}







      <Transition>
        <h1 v-if="show">I AM A HEADING</h1>
      </Transition>
      <button @click="show = !show">Toggle Paragraph</button>














e assim:






      show: true,

















TEMOS ESSA MESMA ANIMATION PARA O 'ADD' E 'REMOVE' DESSE ELEMENTO...












---> as classes, portanto, são:








v-enter-from 



v-enter-active 


v-enter-to 











v-leave-from 




v-leave-active 



v-leave-to 












PODEMOS DEFINIR QUAISQUER PROPRIEDADES CSS NO INTERIOR DESSAS CLASSES ESPECIAIS....











OK... É ASSIM QUE PODEMOS USAR O COMPONENT 'TRANSITION' PARA 


ANIMAR A APPEARANCE E DISAPPEARANCE DE ELEMENTOS HTML...










--> O REMOVAL É MAIS DIFÍCIL SEM ESSE COMPONENT DE 'TRANSITION' --> 




E O COMPONENT DE 'TRANSITION' É USADO COM 'V-IF' E 'V-SHOW'...











VC SÓ PRECISA USAR O 'TRANSITION' QUANDO TEM UM USE-CASE QUE ENVOLVA 


ESSE CASO DE 





'ADD TO DOM/REMOVE TO DOM' (com v-show e v-if, ou com render condicional)...
















--> TODAS ESSAS CLASSES SERÃO ADICIONADAS/REMOVIDAS COM A AJUDA DO VUE 











--> e nosso animate funciona, o paragraph realmente é movido para a esquerda.