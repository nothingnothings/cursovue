








OK... NOSSO CÓDIGO HAVIA FICADO ASSIm:



<template>
  <header>
    <nav>
      <ul>
        <li>
          <!-- <button @click="setActivePage('teams-list')">Teams</button> -->
          <router-link to="/teams">Teams</router-link>
        </li>
        <li>
          <!-- <button @click="setActivePage('users-list')">Users</button> -->
          <router-link to="/users">Users</router-link>
        </li>
      </ul>
    </nav>
  </header>
</template>

<script>
export default {
  emits: ['set-page'],
  methods: {
    setActivePage(page) {
      this.$emit('set-page', page);
    },
  },
};
</script>

<style scoped>
header {
  width: 100%;
  height: 5rem;
  background-color: #11005c;
}

nav {
  height: 100%;
}

ul {
  list-style: none;
  margin: 0;
  padding: 0;
  height: 100%;
  display: flex;
  justify-content: center;
  align-items: center;
}

li {
  margin: 0 2rem;
}

/*
button {
  font: inherit;
  background: transparent;
  border: 1px solid transparent;
  cursor: pointer;
  color: white;
  padding: 0.5rem 1.5rem;
  display: inline-block;
}

button:hover,
button:active {
  color: #f1a80a;
  border-color: #f1a80a;
  background-color: #1a037e;
}
*/

a {
  font: inherit;
  background: transparent;
  border: 1px solid transparent;
  text-decoration: none;
  cursor: pointer;
  color: white;
  padding: 0.5rem 1.5rem;
  display: inline-block;
}

a:hover,
a:active {
  color: #f1a80a;
  border-color: #f1a80a;
  background-color: #1a037e;
}
</style>












QUEREMOS 








ESCREVER/USAR AS 









CLASSES ESPECIAIS CSS __ CRIADAS PELO ROUER LINK,






CRIADAS PARA A 'ANCHOR TAG'...











--> PARA ISSO,





O PROFESSOR 

ESCREVE CLASSES CSS ASSim:




a:hover,
a:active,
a.router-link-active {
  
}










--> COM ISSO, O PROFESSOR ESPECIFICA QUE VAMOS QUERER APLICAR ESSES  ESTILOS CSS 

A
 

 CADA ANCHOR TAG 
 QUE TEM 

 ESSA CLASS DE 'a.router-link-active' 





escrita em si...







EX:







/* a:hover,
a:active {
  color: #f1a80a;
  border-color: #f1a80a;
  background-color: #1a037e;
} */

/* 'a.router-link-active' --> é o nome da class que fica em uma ANCHOR-TAG, quando vc usa o routing */

a:hover,
a:active,
a.router-link-active {  
  color: #f1a80a;
  border-color: #f1a80a;
  background-color: #1a037e;
}
</style>















--> COMO 1 SIDE-NOTE,





TEMOS 2 CLASSES COM O VUE:





O 'router-link-active' 



e 



o 



'router-link-exact-active'...












A DIFERENÇA ENTRE OS 2 É QUE 


'router-link-active'


TAMBÉM 

SERIA APLICADO AO ITEM DE 'Users' (na toolbar) 



SE TIVÉSSEMOS UMA 'NESTED ROUTE'....

(

  tipo 

  'domain.com/users/user' (aí, o 'users' ficaria highlighted TAMBÉM... se tivéssemos 'router-link-exact-active', ELE NÃO FICARIA LIGADO/ATIVADO)...
)














AINDA NÃO APRENDEMOS SOBRE NESTED ROUTES,



MAS 

O QUE INTERESSA É QUE 

'router-link-exact-active'



VAI SER APLICADO __ 



APENAS EM ITEMS 'MATCHEADOS EXATAMENTE PELA ROUTE ATUAL' (



  e o 'router-link-active' 


  VAI SER ATIVADO __ MESMO EM CASOS EM QUE VC ESTÁ EM _ 

  UMA NESTED ROUTE....
)











--> MAIS TARDE ESTUDAREMOS NESTED ROUTES...











--> OK... 





VC TBM PODE MUDAR ESSAS 'DEFAULT CLASSES'


LÁ 





NO 'main.js',







NO LOCAL EM QUE VC CRIA O ROUTER(




  lá com 



  ''








  const router = createRouter({
  routes: [
    {
      path: '/teams',
      component: TeamsList,
    },

    {
      path: '/users',
      component: UsersList,
    },
  ], /////OPTION MAIS IMPORTANTE, SÃO AS DIFERENTES ROUTES QUE VC VAI QUERER TER NO SEU APP...

  history: createWebHistory(), /////'createWebHistory()' É O METHOD/OPÇÃO MAIS COMUM PARA __ SPAs....
  ///com isso, permitimos que seja usado o COMPORTAMENTO DEFAULT DE HISTORY DO BROWSER...
});



'''
)












----> DENTRO DESSE METHOD DE 'createRouter',






VC PODE DEFINIR AS OPTIONS DE 'linkActiveClass:'



e 



'linkExactActiveClass:'..






















COM ESSA OPTION, PODEMOS MUDAR O NAME DA NOSSA 'ACTIVE CLASS' 



TRIGGADA PELO __ VUE...







EX:











const router = createRouter({
  linkActiveClass: 'active',  ///com essas 2 options, podemos mudar o NOME DA CSS CLASS DE 'active' QUE APARECE NAS NOSSAS ANCHOR TAGS, quando estamos em 1 determinado link (routing, etc)...
  linkExactActiveClass: 'exact-active',
  routes: [
    {
      path: '/teams',
      component: TeamsList,
    },

    {
      path: '/users',
      component: UsersList,
    },
  ], /////OPTION MAIS IMPORTANTE, SÃO AS DIFERENTES ROUTES QUE VC VAI QUERER TER NO SEU APP...

  history: createWebHistory(), /////'createWebHistory()' É O METHOD/OPÇÃO MAIS COMUM PARA __ SPAs....
  ///com isso, permitimos que seja usado o COMPORTAMENTO DEFAULT DE HISTORY DO BROWSER...
});






















OK...






SE FAZEMOS ESSA ALTERAÇÃO,


PRECISAMOS TROCAR O NOME DA CLASS QUE DEFINIMOS 


LÁ EM 'TheNavigation':




a:hover,
a:active,
a.router-link-active {  
  color: #f1a80a;
  border-color: #f1a80a;
  background-color: #1a037e;
}




VIRA:





a:hover,
a:active,
a.active {  
  color: #f1a80a;
  border-color: #f1a80a;
  background-color: #1a037e;
}



-------------









COM ISSO, O NEGÓCIO AINDA FUNCIONA,


MAS O NOME DA CLASS 'router-link-ACTIVE' TERÁ SIDO ALTERADO.








CERTO...





MAS DEVEMOS IR MAIS FUNDO,

VER AS DIFERENTES OPÇÕES QUE TEMOS AQUI,


OS DIFERENTES TIPOS DE ROUTES QUE PODEMOS REGISTRAR...