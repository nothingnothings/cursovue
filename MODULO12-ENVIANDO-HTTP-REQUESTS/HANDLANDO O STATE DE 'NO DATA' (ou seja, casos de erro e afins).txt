











OK...




 NO MOMENTO, ASSUMIMOS QUE 

 TUDO VAI DAR CERTO,

 QUE NUNCA VAMOS 

 RECEBER 

 1 ERROR...












 -> É CLARO QUE, NA REALIDADE,

 PODEMOS GANHAR ERRORS..






 -->  OK...









ISSO PQ ___ PODEMOS RECEBER 'NO DATA' (

    se não tivermos nenhuma data no firebase
)








--> COM ISSO,



VAMOS TER UMA 'EMPTY RESPONSE',



PQ NÃO TEREMOS NENHUMA DATA A SER CARREGADA.....










--> TAMBÉM QUEREMOS HANDLAR


CASES COMO 'SERVER TIMES OUT' (serverside error),







MAS VAMOS COMEÇAR COM O CASE DE 'NO DATA'....









-> HANDLAR O CASE DE 'NO DATA'

É FÁCIL,


BASTA COLOCAR 









1 



DIV CHECANDO (v-if)



POR 



1 ARRAY VAZIO...




 






 EX:








 <template>
  <section>
    <base-card>
      <h2>Submitted Experiences</h2>
      <div>
        <!-- <base-button @click="loadExperiences()"
          >Load Submitted Experiences</base-button> -->
      </div>
      <ul>
      <div v-if="experiencesAreLoading">Loading...</div>
        <survey-result
        v-else-if="!experiencesAreLoading && results.length > 0"
          v-for="result in results"
          :key="result.id"
          :name="result.name"
          :rating="result.rating"
        >
        </survey-result>
      </ul>
    </base-card>
  </section>
</template>


















-> POR FIM, VOU QUERER COLOCAR UM NEGÓCIO COM 'V-IF'




QUE APENAS SERÁ EXIBIDO NOS CASOS EM QUE 'O ARRAY DE EXPERIENCES ESTÁ VAZIO'..







ex:


















<template>
  <section>
    <base-card>
      <h2>Submitted Experiences</h2>
      <div>
        <!-- <base-button @click="loadExperiences()"
          >Load Submitted Experiences</base-button> -->
      </div>
      <ul>
      <div v-if="experiencesAreLoading">Loading...</div>
        <survey-result
        v-else-if="!experiencesAreLoading && results.length > 0"
          v-for="result in results"
          :key="result.id"
          :name="result.name"
          :rating="result.rating"
        >
        </survey-result>
      <div v-if="!experiencesAreLoading && results.length === 0">No Experiences Were Found</div>
      </ul>
    </base-card>
  </section>
</template>

<script>
import SurveyResult from "../survey/SurveyResult";
export default {
  // props: ['results'],
  // props: ['results', 'loadExperiencesHandler'],
  props: ["results", "experiencesAreLoading"],

  components: {
    SurveyResult,
  },

  methods: {
    // loadExperiences() {
    //   console.log("ENTERED");
    //   this.$emit('loadExperiencesHandler');
    // },
  },
};
</script>

<style scoped>
ul {
  list-style: none;
  margin: 0;
  padding: 0;
}
</style>




















CERTO.... FUNCIONOU..


















OK, O CASE DE 'NO DATA' ESTÁ FUNCIONANDO, MAS COMO PODEMOS 




FAZER HANDLE DE ERRORS?